#BlueJ class context
comment0.target=TextBox
comment0.text=\r\n\ TextBox\r\n\ <p>\r\n\ A\ container\ for\ an\ editable\ String.<br>\r\n\ Works\ with\ different\ Fonts\ and\ sizes.<br>\r\n\ <p>\r\n\ Has\ caret\ position\ to\ input\ at\ particular\ index.<br>\r\n\ Can\ move\ caret\ around\ by\ clicking\ at\ some\ position\ or\ by\ using\ arrow\ keys.<br>\r\n\ <p>\r\n\ Editable\ if\ has\ focus.\ Click\ on\ TextBox\ to\ give\ it\ focus.\ Loses\ focus\ when\ clicked\ off\ of\ it.<br>\r\n\ Scrollable\ (by\ mouse\ wheel\ or\ click\ and\ dragging\ scroll\ bar)\ when\ String\ not\ all\ viewable\ at\ once.<br>\r\n\ Auto\ scrolls\ while\ you\ type\ to\ stay\ with\ the\ blinking\ cursor.<br>\r\n\ <p>\r\n\ Accepts\ by\ default\:<br>\r\n\ All\ lower-\ and\ upper-\ case\ letters,\ all\ standard\ punctuation,\ new\ lines.<br>\r\n\ <p>\r\n\ Includes\ text\ selection\ which\ can\ be\ done\ by\:<br>\r\n\ 1.\ Click\ and\ drag.<br>\r\n\ 2.\ Shift\ +\ click.<br>\r\n\ 3.\ Shift\ +\ arrow\ keys.<br>\r\n\ 4.\ Ctrl+a.<br>\r\n\ <p>\r\n\ Includes\ copy/cut/paste\ functionality\ with\ ctrl+c\ /\ ctrl+x\ /\ ctrl+v<br>\r\n\ \r\n\ @author\ Taylor\ Born\r\n\ @version\ November\ 2010\ -\ January\ 2014\r\n
comment1.params=
comment1.target=boolean\ textBoxHasFocus()
comment1.text=\r\n\ Determine\ if\ there\ exists\ a\ TextBox\ that\ has\ focus,\ within\ the\ World.\r\n\ @return\ Whethor\ or\ not\ there\ exists\ a\ TextBox\ that\ has\ focus,\ within\ the\ World.\r\n
comment10.params=
comment10.target=void\ handleArrowKeys()
comment11.params=
comment11.target=void\ handleForSelecting()
comment12.params=
comment12.target=void\ gainedFocus()
comment12.text=\r\n\ Called\ when\ gains\ focus.<p>\r\n\ Releases\ Greenfoot.getKey().\r\n
comment13.params=
comment13.target=java.lang.String\ getText()
comment13.text=\r\n\ Get\ the\ contents\ of\ this\ TextBox.\r\n\ @return\ The\ text\ in\ this\ TextBox.\r\n
comment14.params=str
comment14.target=void\ setText(java.lang.String)
comment14.text=\r\n\ Set\ the\ text\ for\ this\ TextBox.\r\n\ @param\ str\ The\ text\ to\ be\ in\ this\ TextBox.\r\n
comment15.params=
comment15.target=void\ clear()
comment15.text=\r\n\ Set\ the\ text\ for\ this\ TextBox\ to\ "".\r\n
comment16.params=
comment16.target=java.awt.Font\ getFont()
comment16.text=\r\n\ Get\ the\ Font\ being\ used\ in\ this\ TextBox.\r\n\ @return\ The\ Font\ being\ used\ in\ this\ TextBox.\r\n
comment17.params=f
comment17.target=void\ setFont(java.awt.Font)
comment17.text=\r\n\ Set\ the\ Font\ for\ this\ TextBox.\r\n\ @param\ f\ The\ Font\ to\ set\ for\ this\ TextBox.\r\n
comment18.params=s
comment18.target=void\ acceptOnly(java.lang.String)
comment18.text=\r\n\ Set\ String\ of\ characters\ that\ will\ be\ allowed\ as\ input.\r\n\ @param\ s\ String\ of\ characters\ that\ will\ be\ allowed\ as\ input.\ Having\ an\ empty\ String\ will\ allow\ all\ characters\ to\ be\ inputed.\r\n
comment19.params=s
comment19.target=void\ dontAccept(java.lang.String)
comment19.text=\r\n\ Set\ String\ of\ characters\ that\ will\ not\ be\ allowed\ as\ input.\r\n\ @param\ s\ String\ of\ characters\ that\ will\ not\ be\ allowed\ as\ input.\r\n
comment2.params=bool
comment2.target=void\ readLowerAsUpperCase(boolean)
comment20.params=m
comment20.target=void\ setMaxLength(int)
comment20.text=\r\n\ Set\ a\ limit\ for\ how\ long\ the\ text\ can\ be.\r\n\ @param\ m\ The\ limit\ for\ how\ many\ characters\ the\ text\ can\ include.\ -1\ will\ allow\ unlimited.\r\n
comment21.params=s
comment21.target=void\ setSize(java.awt.Point)
comment21.text=\r\n\ Set\ the\ width\ and\ height\ of\ this\ TextBox.\r\n\ @param\ s\ The\ width\ and\ height\ for\ this\ TextBox.\r\n
comment22.params=readOnly
comment22.target=void\ setReadOnly(boolean)
comment22.text=\r\n\ Set\ whether\ the\ TextBox\ will\ accept\ input.\r\n\ @param\ readOnly\ Whether\ the\ TextBox\ will\ accept\ input.\r\n
comment23.params=
comment23.target=boolean\ isReadOnly()
comment23.text=\r\n\ Determine\ whether\ this\ TextBox\ will\ accept\ input.\r\n\ @return\ Whether\ this\ TextBox\ accepts\ input.\r\n
comment24.params=
comment24.target=java.awt.Color\ getTextColor()
comment24.text=\r\n\ Get\ the\ Color\ this\ TextBox\ will\ be\ painting\ its\ text\ as.\r\n\ @return\ The\ Color\ this\ TextBox\ will\ be\ painting\ its\ text\ as.\r\n
comment25.params=c
comment25.target=void\ setTextColor(java.awt.Color)
comment25.text=\r\n\ Change\ the\ Color\ this\ TextBox\ will\ be\ painting\ its\ text\ as.\r\n\ @param\ c\ The\ Color\ this\ TextBox\ will\ be\ painting\ its\ text\ as.\r\n
comment26.params=
comment26.target=java.awt.Color\ getCursorColor()
comment26.text=\r\n\ Get\ the\ Color\ of\ the\ blinking\ cursor.\r\n\ @return\ The\ Color\ of\ the\ blinking\ cursor.\r\n
comment27.params=c
comment27.target=void\ setCursorColor(java.awt.Color)
comment27.text=\r\n\ Change\ the\ Color\ of\ the\ blinking\ cursor.\r\n\ @param\ c\ The\ new\ Color\ of\ the\ blinking\ cursor.\r\n
comment28.params=
comment28.target=java.awt.Color\ getOutlineColor()
comment28.text=\r\n\ Get\ the\ Color\ outlining\ the\ TextBox\ when\ it\ has\ focus.\r\n\ @return\ The\ Color\ outlining\ the\ TextBox\ when\ it\ has\ focus.\r\n
comment29.params=c
comment29.target=void\ setOutlineColor(java.awt.Color)
comment29.text=\r\n\ Change\ the\ Color\ outlining\ the\ TextBox\ when\ it\ has\ focus.\r\n\ @param\ c\ The\ new\ Color\ outlining\ the\ TextBox\ when\ it\ has\ focus.\r\n
comment3.params=size\ text\ font
comment3.target=TextBox(java.awt.Point,\ java.lang.String,\ java.awt.Font)
comment3.text=\r\n\ Create\ a\ new\ TextBox.\r\n\ @param\ size\ The\ width\ and\ height\ of\ the\ TextBox.\r\n\ @param\ text\ The\ initial\ text\ to\ display\ in\ the\ TextBox.\r\n\ @param\ font\ The\ Font\ for\ the\ text.\r\n
comment30.params=
comment30.target=java.awt.Color\ getScrollBarColor()
comment30.text=\r\n\ Get\ the\ Color\ of\ this\ TextBox's\ scroll\ bar.\r\n\ @return\ The\ Color\ of\ this\ TextBox's\ scroll\ bar.\r\n
comment31.params=c
comment31.target=void\ setScrollBarColor(java.awt.Color)
comment31.text=\r\n\ Change\ the\ Color\ of\ this\ TextBox's\ scroll\ bar.\r\n\ @param\ c\ The\ new\ Color\ of\ this\ TextBox's\ scroll\ bar.\r\n
comment32.params=
comment32.target=java.awt.Color\ getBackgroundColor()
comment32.text=\r\n\ Get\ the\ Color\ of\ this\ TextBox's\ background.\r\n\ @return\ The\ Color\ of\ this\ TextBox's\ background.\r\n
comment33.params=c
comment33.target=void\ setBackgroundColor(java.awt.Color)
comment33.text=\r\n\ Change\ the\ Color\ of\ this\ TextBox's\ background.\r\n\ @param\ c\ The\ new\ Color\ of\ this\ TextBox's\ background.\r\n
comment34.params=
comment34.target=java.awt.Color\ getMessageColor()
comment34.text=\r\n\ Get\ the\ Color\ that\ is\ used\ to\ display\ message.\ Default\:\ Color.GRAY\r\n\ @return\ The\ Color\ that\ is\ used\ to\ display\ message.\r\n
comment35.params=c
comment35.target=void\ setMessageColor(java.awt.Color)
comment35.text=\r\n\ Change\ the\ Color\ that\ is\ used\ to\ display\ message.\r\n\ @param\ c\ The\ new\ Color\ that\ is\ used\ to\ display\ message.\r\n\ @see\ setMessage(String)\r\n
comment36.params=m
comment36.target=void\ setMessage(java.lang.String)
comment36.text=\r\n\ Sets\ a\ message\ to\ display\ when\ this\ TextBox\ is\ not\ active\ and\ has\ no\ text.\r\n\ <p>\r\n\ Will\ be\ shown\ in\ the\ Color\ designated\ for\ message.\r\n\ @param\ m\ The\ message\ to\ display.\r\n\ @see\ setMessageColor(Color)\r\n
comment37.params=
comment37.target=java.lang.String\ getMessage()
comment37.text=\r\n\ Get\ the\ message\ that\ gets\ displayed\ when\ this\ TextBox\ is\ not\ active\ and\ has\ no\ text.\r\n\ @return\ The\ message\ that\ gets\ displayed\ when\ this\ TextBox\ is\ not\ active\ and\ has\ no\ text.\r\n
comment38.params=p
comment38.target=void\ setAsPassword(boolean)
comment38.text=\r\n\ Set\ if\ this\ TextBox\ will\ display\ its\ text\ as\ password\ characters.\r\n\ @param\ p\ If\ this\ TextBox\ will\ display\ its\ text\ as\ password\ characters.\r\n
comment39.params=
comment39.target=boolean\ isPassword()
comment39.text=\r\n\ Check\ if\ this\ TextBox\ will\ display\ its\ text\ as\ password\ characters.\r\n\ @return\ Whether\ this\ TextBox\ will\ display\ its\ text\ as\ password\ characters.\r\n
comment4.params=size\ text
comment4.target=TextBox(java.awt.Point,\ java.lang.String)
comment4.text=\r\n\ Create\ a\ new\ TextBox.\r\n\ @param\ size\ The\ width\ and\ height\ of\ the\ TextBox.\r\n\ @param\ text\ The\ initial\ text\ to\ display\ in\ the\ TextBox.\r\n
comment40.params=
comment40.target=boolean\ hasChanged()
comment5.params=
comment5.target=void\ act()
comment6.params=
comment6.target=void\ handleCopyCutPaste()
comment7.params=
comment7.target=void\ handleMouse()
comment8.params=
comment8.target=boolean\ deleteSelected()
comment9.params=
comment9.target=void\ handleInput()
numComments=41
